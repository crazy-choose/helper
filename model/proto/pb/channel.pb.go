// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1-devel
// 	protoc        v3.21.6
// source: channel.proto

// 指定proto版本

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgType int32

const (
	MsgType_UNIVERSAL        MsgType = 0
	MsgType_TickNotify       MsgType = 1
	MsgType_CycleNotify      MsgType = 3
	MsgType_OrderRtnNotify   MsgType = 5
	MsgType_OrderTradeNotify MsgType = 7
	MsgType_OrderInsert      MsgType = 2
	MsgType_OrderAction      MsgType = 4
)

// Enum value maps for MsgType.
var (
	MsgType_name = map[int32]string{
		0: "UNIVERSAL",
		1: "TickNotify",
		3: "CycleNotify",
		5: "OrderRtnNotify",
		7: "OrderTradeNotify",
		2: "OrderInsert",
		4: "OrderAction",
	}
	MsgType_value = map[string]int32{
		"UNIVERSAL":        0,
		"TickNotify":       1,
		"CycleNotify":      3,
		"OrderRtnNotify":   5,
		"OrderTradeNotify": 7,
		"OrderInsert":      2,
		"OrderAction":      4,
	}
)

func (x MsgType) Enum() *MsgType {
	p := new(MsgType)
	*p = x
	return p
}

func (x MsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_channel_proto_enumTypes[0].Descriptor()
}

func (MsgType) Type() protoreflect.EnumType {
	return &file_channel_proto_enumTypes[0]
}

func (x MsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgType.Descriptor instead.
func (MsgType) EnumDescriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{0}
}

type HeartBeat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *HeartBeat) Reset() {
	*x = HeartBeat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeartBeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartBeat) ProtoMessage() {}

func (x *HeartBeat) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartBeat.ProtoReflect.Descriptor instead.
func (*HeartBeat) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{0}
}

func (x *HeartBeat) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Push struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mt   MsgType `protobuf:"varint,1,opt,name=mt,proto3,enum=pb.MsgType" json:"mt,omitempty"` //消息类型
	Body []byte  `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`              //消息内容
}

func (x *Push) Reset() {
	*x = Push{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Push) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Push) ProtoMessage() {}

func (x *Push) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Push.ProtoReflect.Descriptor instead.
func (*Push) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{1}
}

func (x *Push) GetMt() MsgType {
	if x != nil {
		return x.Mt
	}
	return MsgType_UNIVERSAL
}

func (x *Push) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type Notify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mt   MsgType `protobuf:"varint,1,opt,name=mt,proto3,enum=pb.MsgType" json:"mt,omitempty"` //消息类型
	Body []byte  `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`              //消息内容
}

func (x *Notify) Reset() {
	*x = Notify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_channel_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notify) ProtoMessage() {}

func (x *Notify) ProtoReflect() protoreflect.Message {
	mi := &file_channel_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notify.ProtoReflect.Descriptor instead.
func (*Notify) Descriptor() ([]byte, []int) {
	return file_channel_proto_rawDescGZIP(), []int{2}
}

func (x *Notify) GetMt() MsgType {
	if x != nil {
		return x.Mt
	}
	return MsgType_UNIVERSAL
}

func (x *Notify) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

var File_channel_proto protoreflect.FileDescriptor

var file_channel_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x22, 0x21, 0x0a, 0x09, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37, 0x0a, 0x04, 0x50, 0x75, 0x73, 0x68, 0x12, 0x1b,
	0x0a, 0x02, 0x6d, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x02, 0x6d, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22,
	0x39, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x1b, 0x0a, 0x02, 0x6d, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x02, 0x6d, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x2a, 0x85, 0x01, 0x0a, 0x07, 0x4d,
	0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x49, 0x56, 0x45, 0x52,
	0x53, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x69, 0x63, 0x6b, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x74, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x10, 0x07,
	0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x10,
	0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x10, 0x04, 0x32, 0x5a, 0x0a, 0x0c, 0x47, 0x75, 0x69, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x0d, 0x2e, 0x70, 0x62,
	0x2e, 0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x1a, 0x0d, 0x2e, 0x70, 0x62, 0x2e,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x42, 0x65, 0x61, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x1a, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x28, 0x01, 0x30, 0x01, 0x42, 0x2f,
	0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x72, 0x61,
	0x7a, 0x79, 0x2d, 0x63, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x2f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_channel_proto_rawDescOnce sync.Once
	file_channel_proto_rawDescData = file_channel_proto_rawDesc
)

func file_channel_proto_rawDescGZIP() []byte {
	file_channel_proto_rawDescOnce.Do(func() {
		file_channel_proto_rawDescData = protoimpl.X.CompressGZIP(file_channel_proto_rawDescData)
	})
	return file_channel_proto_rawDescData
}

var file_channel_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_channel_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_channel_proto_goTypes = []interface{}{
	(MsgType)(0),      // 0: pb.MsgType
	(*HeartBeat)(nil), // 1: pb.HeartBeat
	(*Push)(nil),      // 2: pb.Push
	(*Notify)(nil),    // 3: pb.Notify
}
var file_channel_proto_depIdxs = []int32{
	0, // 0: pb.Push.mt:type_name -> pb.MsgType
	0, // 1: pb.Notify.mt:type_name -> pb.MsgType
	1, // 2: pb.GuideService.Hello:input_type -> pb.HeartBeat
	2, // 3: pb.GuideService.Channel:input_type -> pb.Push
	1, // 4: pb.GuideService.Hello:output_type -> pb.HeartBeat
	3, // 5: pb.GuideService.Channel:output_type -> pb.Notify
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_channel_proto_init() }
func file_channel_proto_init() {
	if File_channel_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_channel_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeartBeat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Push); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_channel_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_channel_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_channel_proto_goTypes,
		DependencyIndexes: file_channel_proto_depIdxs,
		EnumInfos:         file_channel_proto_enumTypes,
		MessageInfos:      file_channel_proto_msgTypes,
	}.Build()
	File_channel_proto = out.File
	file_channel_proto_rawDesc = nil
	file_channel_proto_goTypes = nil
	file_channel_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GuideServiceClient is the client API for GuideService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GuideServiceClient interface {
	Hello(ctx context.Context, in *HeartBeat, opts ...grpc.CallOption) (*HeartBeat, error)
	Channel(ctx context.Context, opts ...grpc.CallOption) (GuideService_ChannelClient, error)
}

type guideServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGuideServiceClient(cc grpc.ClientConnInterface) GuideServiceClient {
	return &guideServiceClient{cc}
}

func (c *guideServiceClient) Hello(ctx context.Context, in *HeartBeat, opts ...grpc.CallOption) (*HeartBeat, error) {
	out := new(HeartBeat)
	err := c.cc.Invoke(ctx, "/pb.GuideService/Hello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *guideServiceClient) Channel(ctx context.Context, opts ...grpc.CallOption) (GuideService_ChannelClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GuideService_serviceDesc.Streams[0], "/pb.GuideService/Channel", opts...)
	if err != nil {
		return nil, err
	}
	x := &guideServiceChannelClient{stream}
	return x, nil
}

type GuideService_ChannelClient interface {
	Send(*Push) error
	Recv() (*Notify, error)
	grpc.ClientStream
}

type guideServiceChannelClient struct {
	grpc.ClientStream
}

func (x *guideServiceChannelClient) Send(m *Push) error {
	return x.ClientStream.SendMsg(m)
}

func (x *guideServiceChannelClient) Recv() (*Notify, error) {
	m := new(Notify)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GuideServiceServer is the server API for GuideService service.
type GuideServiceServer interface {
	Hello(context.Context, *HeartBeat) (*HeartBeat, error)
	Channel(GuideService_ChannelServer) error
}

// UnimplementedGuideServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGuideServiceServer struct {
}

func (*UnimplementedGuideServiceServer) Hello(context.Context, *HeartBeat) (*HeartBeat, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hello not implemented")
}
func (*UnimplementedGuideServiceServer) Channel(GuideService_ChannelServer) error {
	return status.Errorf(codes.Unimplemented, "method Channel not implemented")
}

func RegisterGuideServiceServer(s *grpc.Server, srv GuideServiceServer) {
	s.RegisterService(&_GuideService_serviceDesc, srv)
}

func _GuideService_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartBeat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GuideServiceServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GuideService/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GuideServiceServer).Hello(ctx, req.(*HeartBeat))
	}
	return interceptor(ctx, in, info, handler)
}

func _GuideService_Channel_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GuideServiceServer).Channel(&guideServiceChannelServer{stream})
}

type GuideService_ChannelServer interface {
	Send(*Notify) error
	Recv() (*Push, error)
	grpc.ServerStream
}

type guideServiceChannelServer struct {
	grpc.ServerStream
}

func (x *guideServiceChannelServer) Send(m *Notify) error {
	return x.ServerStream.SendMsg(m)
}

func (x *guideServiceChannelServer) Recv() (*Push, error) {
	m := new(Push)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GuideService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.GuideService",
	HandlerType: (*GuideServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _GuideService_Hello_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Channel",
			Handler:       _GuideService_Channel_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "channel.proto",
}
